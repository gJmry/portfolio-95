import React, {useState} from 'react';
import {Button, Tab, TabBody, Tabs, Panel, Divider} from 'react95';
import styled from 'styled-components';
import {useWindowContext} from "../../assets/scripts/WindowContext.jsx";
import {WindowsComponent} from "./WindowsComponent.jsx";

const SkillButton = styled(Button)`
    margin: 5px;
    width: 180px;
    height: 60px;
    transition: all 0.1s;
    font-size: 11px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    ${({$active}) => $active && `
        box-shadow: inset 2px 2px #808080, inset -2px -2px white;
    `}
    &:hover {
        transform: translateY(-1px);
    }
`;

const DescriptionPanel = styled(Panel)`
    margin-top: 15px;
    padding: 15px;
    flex: none;
`;

const SkillTitle = styled.h4`
    margin: 0 0 8px 0;
    font-weight: bold;
`;

const SkillDescription = styled.p`
    margin: 0;
    font-size: 14px;
    line-height: 1.5;
`;

const CategoryTitle = styled.h3`
    margin-bottom: 15px;
    border-bottom: 1px solid #808080;
    padding-bottom: 5px;
`;

const ContextBadge = styled.span`
    padding: 2px 6px;
    font-size: 9px;
    border-radius: 2px;
    margin-top: 4px;
    background-color: ${({children}) =>
            children === 'PERSONAL' ? '#2e7d32' :
                    children === 'UNIVERSITY' ? '#1e3a8a' : '#8b5a00'};
    border: 1px solid #808080;
    color: white;
`;

export function WindowsSkills() {
    const {windows, toggleWindow} = useWindowContext();
    if (!windows.Skills) return null;
    const [activeTab, setActiveTab] = useState(0);
    const [selectedSkill, setSelectedSkill] = useState(null);

    const skills = {
        frontend: [
            {
                name: "‚öõÔ∏è React.js",
                context: "personal",
                description: "Advanced React mastery with hooks, context API, and optimizations. Development of complex SPA applications with sophisticated state management.",
                projects: "Interactive portfolio, analytics dashboards, e-commerce apps"
            },
            {
                name: "üî• Svelte",
                context: "personal",
                description: "Modern framework with optimized compilation. Great for lightweight and performant applications with intuitive syntax.",
                projects: "Real-time applications, reusable components"
            },
            {
                name: "üü© Vue.js",
                context: "university",
                description: "Academic learning framework. Understanding of reactivity and component system. Collaborative study projects.",
                projects: "Student projects, educational prototypes"
            },
            {
                name: "üé® Tailwind CSS",
                context: "personal",
                description: "Mastery of utility-first CSS. Creating responsive and consistent designs. Build optimization and advanced customization.",
                projects: "Showcase websites, admin interfaces"
            },
            {
                name: "üÖ∞Ô∏è Angular",
                context: "university",
                description: "Academic training on TypeScript and MVC architecture. Understanding of services, modules and dependency injection.",
                projects: "Simulated enterprise applications, group projects"
            }
        ],
        backend: [
            {
                name: "üåø Node.js",
                context: "personal",
                description: "REST and GraphQL APIs development. Express mastery, middleware management, JWT authentication, and database integration.",
                projects: "E-commerce APIs, authentication systems, microservices"
            },
            {
                name: "üï∏ Symfony",
                context: "university",
                description: "Learning MVC concepts in PHP. Using Doctrine ORM, routing system, and bundle architecture for academic projects.",
                projects: "University web applications, student management"
            },
            {
                name: "ü¶Ä Rust",
                context: "personal",
                description: "Passion for systems programming. Learning memory management without garbage collector, secure concurrent programming.",
                projects: "CLI tools, parsers, performance experiments"
            },
            {
                name: "‚òï Spring Boot",
                context: "university",
                description: "Training on Java enterprise architecture. Understanding annotations, IoC container, and robust application development.",
                projects: "Management systems, academic REST APIs"
            },
            {
                name: "üêπ Go",
                context: "personal",
                description: "Exploring microservices and concurrent programming. Appreciation of syntactic simplicity and native performance.",
                projects: "Fast web services, personal DevOps tools"
            }
        ],
        devops: [
            {
                name: "üîÑ CI/CD",
                context: "personal",
                description: "Setting up automated pipelines with GitHub Actions and GitLab CI. Automated testing, progressive deployments, monitoring.",
                projects: "Deployment automation, E2E testing"
            },
            {
                name: "üê≥ Docker",
                context: "personal",
                description: "Application containerization. Creating optimized Dockerfiles, docker-compose for multi-service development environments.",
                projects: "Development environments, isolated deployments"
            },
            {
                name: "üì¶ Kubernetes",
                context: "university",
                description: "Introduction to container orchestration. Understanding pods, services, and deployments in an educational context.",
                projects: "Learning clusters, student projects"
            },
            {
                name: "‚ôªÔ∏è Refactoring",
                context: "personal",
                description: "Passion for continuous code improvement. Applying SOLID principles, design patterns, and performance optimizations.",
                projects: "Legacy codebase modernization, optimizations"
            },
            {
                name: "üß† System Design",
                context: "personal",
                description: "Architectural thinking on scalability. Designing distributed systems, microservices patterns, load management.",
                projects: "Complex application architecture, technical documentation"
            }
        ],
        softskills: [
            {
                name: "ü§ù Teamwork",
                context: "personal",
                description: "Effective collaboration in multidisciplinary teams. Using collaborative tools, asynchronous communication, and constructive conflict management.",
                projects: "Open-source projects, international teams"
            },
            {
                name: "üé® Creativity & UI",
                context: "personal",
                description: "Design and UX sensitivity. Creating intuitive interfaces, respecting accessibility guidelines, and rapid prototyping.",
                projects: "Design systems, innovative user interfaces"
            },
            {
                name: "üéØ Problem-Solving",
                context: "personal",
                description: "Methodical approach to technical challenges. Breaking down complex problems, finding elegant and maintainable solutions.",
                projects: "Complex debugging, algorithm optimizations"
            },
            {
                name: "üöÄ Adaptability",
                context: "university",
                description: "Rapid learning ability for new technologies. Adapting to team methodologies and evolving project requirements.",
                projects: "Projects with changing constraints, new stacks"
            },
            {
                name: "üîç Attention to Detail",
                context: "personal",
                description: "Rigor in code and specifications. Exhaustive testing, precise documentation, and quality standards compliance.",
                projects: "Code reviews, technical documentation"
            },
            {
                name: "üó£Ô∏è Communication",
                context: "university",
                description: "Clear communication of technical concepts. Simplifying for non-technical audiences, project documentation, and structured presentations.",
                projects: "Academic presentations, collaborative documentation"
            },
            {
                name: "üì¢ Public Speaking",
                context: "personal",
                description: "Confidence in public presentation. Sharing technical knowledge, running workshops, and participating in tech events.",
                projects: "Student conferences, technical workshops"
            }
        ],
        "but": [
            {
                "name": "Comp√©tence 1 : R√©aliser un d√©veloppement d'application",
                "context": "BUT",
                "description": "Concevoir et impl√©menter des applications en respectant des sp√©cifications, en garantissant l'accessibilit√©, la qualit√© et l'int√©gration en production.",
                "levels": {
                    "Niveau 1": [
                        "Impl√©menter des conceptions simples",
                        "√âlaborer des conceptions simples",
                        "Faire des essais et √©valuer leurs r√©sultats en regard des sp√©cifications",
                        "D√©velopper des interfaces utilisateurs"
                    ],
                    "Niveau 2": [
                        "√âlaborer et impl√©menter les sp√©cifications fonctionnelles et non fonctionnelles √† partir des exigences",
                        "Appliquer des principes d'accessibilit√© et d'ergonomie",
                        "Adopter de bonnes pratiques de conception et de programmation",
                        "Utiliser des patrons de conception pour le d√©veloppement d'applications coh√©rentes",
                        "Adapter les solutions existantes au contexte applicatif",
                        "V√©rifier et valider la qualit√© de l'application par les tests"
                    ],
                    "Niveau 3": [
                        "Choisir et impl√©menter les architectures adapt√©es",
                        "D√©velopper des applications sur des supports sp√©cifiques",
                        "R√©aliser un audit d'une application",
                        "Int√©grer des solutions dans un environnement de production"
                    ]
                },
            },
            {
                "name": "Comp√©tence 2 : Optimiser des applications informatiques",
                "context": "BUT",
                "description": "Analyser, comparer et am√©liorer les performances d'applications informatiques en choisissant des structures et des algorithmes adapt√©s, tout en tenant compte des enjeux soci√©taux et environnementaux.",
                "levels": {
                    "Niveau 1": [
                        "Analyser un probl√®me avec m√©thode (d√©coupage en √©l√©ments algorithmiques simples, structure de donn√©es...)",
                        "Comparer des algorithmes pour des probl√®mes classiques (tris simples, recherche...)",
                        "Exp√©rimenter la notion de compilation et les repr√©sentations bas niveau des donn√©es",
                        "Formaliser et mettre en ≈ìuvre des outils math√©matiques pour l‚Äôinformatique"
                    ],
                    "Niveau 2": [
                        "Choisir des structures de donn√©es complexes adapt√©es au probl√®me",
                        "Utiliser des techniques algorithmiques adapt√©es pour des probl√®mes complexes (par ex. recherche op√©rationnelle, m√©thodes arborescentes, optimisation globale, intelligence artificielle...)",
                        "Appr√©hender la diff√©rence entre les paradigmes de programmation",
                        "Comprendre les enjeux et moyens de s√©curisation des donn√©es et du code",
                        "√âvaluer l‚Äôimpact environnemental et soci√©tal des solutions propos√©es"
                    ],
                    "Niveau 3": [
                        "Anticiper les r√©sultats de diverses m√©triques (temps d‚Äôex√©cution, occupation m√©moire...)",
                        "Profiler et analyser le comportement d‚Äôun code existant",
                        "Appliquer des m√©thodes de calcul scientifique (imagerie, immersion, intelligence artificielle, jeux vid√©os, parall√©lisme, calcul formel...)",
                        "Identifier les solutions techniques pour g√©rer la mont√©e en charge des applications"
                    ]
                },
            },
            {
                "name": "Comp√©tence 3 : Administrer des syst√®mes informatiques communicants complexes",
                "context": "BUT",
                "description": "Installer, configurer, s√©curiser et administrer des syst√®mes et r√©seaux afin de garantir leur bon fonctionnement dans des environnements complexes.",
                "levels": {
                    "Niveau 1": [
                        "Identifier les diff√©rents composants (mat√©riels et logiciels) d‚Äôun syst√®me num√©rique",
                        "Utiliser les fonctionnalit√©s de base d‚Äôun syst√®me multit√¢ches / multiutilisateurs",
                        "Installer et configurer un syst√®me d‚Äôexploitation et des outils de d√©veloppement",
                        "Configurer un poste de travail dans un r√©seau d‚Äôentreprise"
                    ],
                    "Niveau 2": [
                        "Concevoir et d√©velopper des applications communicantes",
                        "Utiliser des serveurs et des services r√©seaux virtualis√©s",
                        "S√©curiser les services et donn√©es d‚Äôun syst√®me",
                        "R√©diger une documentation technique (en fran√ßais et en anglais)"
                    ]
                },
            },
            {
                "name": "Comp√©tence 4 : G√©rer des donn√©es de l‚Äôinformation",
                "context": "BUT",
                "description": "Concevoir, interroger, s√©curiser et exploiter des bases de donn√©es afin de transformer l‚Äôinformation en ressource utile pour l‚Äôentreprise.",
                "levels": {
                    "Niveau 1": [
                        "Mettre √† jour et interroger une base de donn√©es relationnelle (en requ√™tes directes ou √† travers une application)",
                        "Visualiser des donn√©es",
                        "Concevoir une base de donn√©es relationnelle √† partir d'un cahier des charges"
                    ],
                    "Niveau 2": [
                        "Optimiser les mod√®les de donn√©es de l‚Äôentreprise",
                        "Assurer la confidentialit√© des donn√©es (int√©grit√© et s√©curit√©)",
                        "Organiser la restitution de donn√©es √† travers la programmation et la visualisation",
                        "Manipuler des donn√©es h√©t√©rog√®nes"
                    ]
                },
            },
            {
                "name": "Comp√©tence 5 : Conduire un projet",
                "context": "BUT",
                "description": "Planifier, organiser et piloter un projet informatique en tenant compte des besoins des utilisateurs, des contraintes organisationnelles et des crit√®res de faisabilit√©.",
                "levels": {
                    "Niveau 1": [
                        "Appr√©hender les besoins du client et de l'utilisateur",
                        "Mettre en place les outils de gestion de projet",
                        "Identifier les acteurs et les diff√©rentes phases d'un cycle de d√©veloppement"
                    ],
                    "Niveau 2": [
                        "Identifier les processus pr√©sents dans une organisation en vue d‚Äôam√©liorer les syst√®mes d‚Äôinformation",
                        "Formaliser les besoins du client et de l'utilisateur",
                        "Identifier les crit√®res de faisabilit√© d‚Äôun projet informatique",
                        "D√©finir et mettre en ≈ìuvre une d√©marche de suivi de projet"
                    ]
                },
            },
            {
                "name": "Comp√©tence 6 : Travailler dans une √©quipe informatique",
                "context": "BUT",
                "description": "Collaborer efficacement au sein d‚Äôune √©quipe informatique en mobilisant des comp√©tences interpersonnelles, en comprenant les enjeux organisationnels et en participant √† la conduite du changement.",
                "levels": {
                    "Niveau 1": [
                        "Appr√©hender l‚Äô√©cosyst√®me num√©rique",
                        "D√©couvrir les aptitudes requises selon les diff√©rents secteurs informatiques",
                        "Identifier les statuts, les fonctions et les r√¥les de chaque membre d‚Äôune √©quipe pluridisciplinaire",
                        "Acqu√©rir les comp√©tences interpersonnelles pour travailler en √©quipe"
                    ],
                    "Niveau 2": [
                        "Comprendre la diversit√©, la structure et la dimension de l‚Äôinformatique dans une organisation (ESN, DSI, ...)",
                        "Appliquer une d√©marche pour int√©grer une √©quipe informatique au sein d‚Äôune organisation",
                        "Mobiliser les comp√©tences interpersonnelles pour travailler dans une √©quipe informatique",
                        "Rendre compte de son activit√© professionnelle"
                    ],
                    "Niveau 3": [
                        "Organiser et partager une veille technologique et informationnelle",
                        "Identifier les enjeux de l‚Äô√©conomie de l‚Äôinnovation",
                        "Guider la conduite du changement informatique au sein d‚Äôune organisation"
                    ]
                },
            }
        ],
    };

    const handleSkillClick = (skill) => {
        setSelectedSkill(skill);
    };

    function SkillTabContent({title, skills, selectedSkill, onSkillClick}) {
        return (
            <div style={{
                display: 'flex',
                flexDirection: 'column',
                height: '100%',
            }}>
                <div style={{
                    overflowY: 'auto',
                    flex: 1,
                    paddingRight: '5px'
                }}>
                    <CategoryTitle>{title}</CategoryTitle>
                    <div style={{display: 'flex', flexWrap: 'wrap'}}>
                        {skills.map((skill, index) => (
                            <SkillButton
                                key={index}
                                onClick={() => onSkillClick(skill)}
                                $active={selectedSkill?.name === skill.name}
                            >
                                <div>{skill.name}</div>
                                <ContextBadge>
                                    {skill.context === 'personal' ? 'PERSONAL' :
                                        skill.context === 'university' ? 'UNIVERSITY' : 'BUT'}
                                </ContextBadge>
                            </SkillButton>
                        ))}
                    </div>

                    {selectedSkill && (
                        <DescriptionPanel style={{marginTop: '15px', maxHeight: '300px',}}>
                            <SkillTitle>{selectedSkill.name}</SkillTitle>
                            <Divider/>
                            <SkillDescription>
                                <strong>Description:</strong> {selectedSkill.description}
                            </SkillDescription>
                            <br/>
                            <SkillDescription>
                                <strong>Projects:</strong> {selectedSkill.projects}
                            </SkillDescription>

                            {selectedSkill.levels && (
                                <div style={{marginTop: '15px'}}>
                                    <Divider/>
                                    <div style={{
                                        display: 'flex',
                                        flexDirection: 'column',
                                        gap: '12px',
                                    }}>
                                        {Object.entries(selectedSkill.levels).map(([level, tasks]) => (
                                            <div
                                                key={level}
                                                style={{
                                                    border: '1px solid #c0c0c0',
                                                    padding: '12px',
                                                    borderRadius: '2px',
                                                }}
                                            >
                                                <div style={{
                                                    fontWeight: 'bold',
                                                    marginBottom: '8px',
                                                    fontSize: '14px',
                                                }}>
                                                    {level}
                                                </div>
                                                <ul style={{
                                                    margin: '0',
                                                    paddingLeft: '18px',
                                                    fontSize: '13px',
                                                    lineHeight: '1.4'
                                                }}>
                                                    {tasks.map((task, i) => (
                                                        <li key={i} style={{marginBottom: '4px'}}>
                                                            {task}
                                                        </li>
                                                    ))}
                                                </ul>
                                            </div>
                                        ))}
                                    </div>
                                </div>
                            )}
                        </DescriptionPanel>
                    )}

                    {!selectedSkill && (
                        <DescriptionPanel style={{marginTop: '15px'}}>
                            <SkillTitle>üëÜ Cliquez sur une comp√©tence pour voir les d√©tails</SkillTitle>
                            <Divider/>
                            <SkillDescription>
                                <strong>PERSONAL:</strong> Comp√©tences acquises par passion personnelle, projets
                                individuels ou exp√©rience professionnelle.
                            </SkillDescription>
                            <br/>
                            <SkillDescription>
                                <strong>UNIVERSITY:</strong> Comp√©tences d√©velopp√©es √† travers les cours universitaires,
                                projets acad√©miques ou formation supervis√©e.
                            </SkillDescription>
                            <br/>
                            <SkillDescription>
                                <strong>BUT:</strong> Comp√©tences du r√©f√©rentiel BUT Informatique avec niveaux de
                                progression d√©finis.
                            </SkillDescription>
                        </DescriptionPanel>
                    )}
                </div>
            </div>
        );
    }

    return (
        <WindowsComponent
            title="üíª Skills"
            onClose={() => toggleWindow('Skills')}
            defaultPosition={{x: 100, y: 100, width: 750, height: 600}}
        >
            <Tabs value={activeTab} onChange={setActiveTab}>
                <Tab value={0}>Frontend</Tab>
                <Tab value={1}>Backend</Tab>
                <Tab value={2}>DevOps</Tab>
                <Tab value={3}>Soft Skills</Tab>
                <Tab value={4}>BUT Informatique</Tab>
            </Tabs>

            <TabBody style={{height: '100%', padding: '15px'}}>
                {activeTab === 0 && (
                    <SkillTabContent
                        title="üé® Frontend Technologies"
                        skills={skills.frontend}
                        selectedSkill={selectedSkill}
                        onSkillClick={handleSkillClick}
                    />
                )}
                {activeTab === 1 && (
                    <SkillTabContent
                        title="üõ† Backend Technologies"
                        skills={skills.backend}
                        selectedSkill={selectedSkill}
                        onSkillClick={handleSkillClick}
                    />
                )}
                {activeTab === 2 && (
                    <SkillTabContent
                        title="üöÄ DevOps & System Design"
                        skills={skills.devops}
                        selectedSkill={selectedSkill}
                        onSkillClick={handleSkillClick}
                    />
                )}
                {activeTab === 3 && (
                    <SkillTabContent
                        title="üí° Soft Skills"
                        skills={skills.softskills}
                        selectedSkill={selectedSkill}
                        onSkillClick={handleSkillClick}
                    />
                )}
                {activeTab === 4 && (
                    <SkillTabContent
                        title="üéì BUT Informatique"
                        skills={skills.but}
                        selectedSkill={selectedSkill}
                        onSkillClick={handleSkillClick}
                    />
                )}
            </TabBody>

        </WindowsComponent>
    );
}